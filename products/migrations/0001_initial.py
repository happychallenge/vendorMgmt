# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-06 09:35
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cn_name', models.CharField(max_length=30)),
                ('en_name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cn_name', models.CharField(max_length=30, verbose_name='CHINESE NAME')),
                ('en_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='ENGLISH NAME')),
                ('role', models.CharField(choices=[('P', 'President'), ('VP', 'Vice-President'), ('SD', 'SalesDirector'), ('SM', 'SalesManager'), ('S', 'SalesMan')], default='S', max_length=2)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='user_profile/')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile', models.CharField(blank=True, max_length=30, null=True)),
                ('fixed', models.CharField(blank=True, max_length=30, null=True)),
                ('wechat', models.CharField(blank=True, max_length=30, null=True)),
                ('qq', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cn_name', models.CharField(max_length=100, verbose_name='CHINESE NAME')),
                ('en_name', models.CharField(max_length=100, verbose_name='ENGLISH NAME')),
                ('cas_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='CAS NO')),
                ('cn_hscode', models.CharField(max_length=15, verbose_name='중국 HS CODE')),
                ('ko_hscode', models.CharField(max_length=15, verbose_name='한국 HS CODE')),
                ('etc_hscode', models.CharField(blank=True, max_length=15, null=True, verbose_name='ETC HS CODE')),
                ('rate_taxrefund', models.FloatField(blank=True, max_length=100, null=True, verbose_name='RATE of TAX REFUND(%)')),
                ('molnumber', models.FloatField(blank=True, max_length=100, null=True, verbose_name='분자량')),
                ('chemequal', models.CharField(blank=True, max_length=100, null=True, verbose_name='화학식')),
                ('chemstructure', models.ImageField(blank=True, null=True, upload_to='chemicalstructure/', verbose_name='구조식')),
                ('usage', models.TextField(blank=True, max_length=500, null=True, verbose_name='용도')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Category')),
            ],
            options={
                'ordering': ['en_name'],
            },
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('currency', models.CharField(choices=[('R', 'RMB'), ('$', 'DOLLAR')], default='R', max_length=1)),
                ('payterm', models.CharField(choices=[('CACHE', 'CACHE'), ('30%PREPAY, 70%LATER', '30%PREPAY, 70%LATER'), ('T/T 30 DAYS', 'T/T 30 DAYS'), ('T/T 45 DAYS', 'T/T 45 DAYS'), ('T/T 60 DAYS', 'T/T 60 DAYS'), ('T/T 90 DAYS', 'T/T 90 DAYS')], default='T/T 60 DAYS', max_length=20)),
                ('quote_date', models.DateTimeField(auto_now_add=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('V', 'VALID'), ('I', 'IN-VALID')], default='V', max_length=1)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-status', '-quote_date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cn_name', models.CharField(max_length=50, verbose_name='CHINESE NAME')),
                ('en_name', models.CharField(max_length=50, verbose_name='ENGLISH NAME')),
                ('cn_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='CHINESE ADDRESS')),
                ('en_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='ENGLISH ADDRESS')),
                ('homepage', models.URLField(blank=True, null=True)),
                ('tel', models.CharField(blank=True, max_length=30, null=True)),
                ('status', models.CharField(choices=[('A', 'ACTIVE'), ('I', 'INACTIVE'), ('B', 'BANKRUPT')], default='A', max_length=10)),
                ('gprelation', models.CharField(choices=[('CURRENT', 'CURRENT'), ('OLD', 'OLD'), ('NO', 'NO')], default='CURRENT', max_length=20, verbose_name='GP RELATION')),
                ('companytype', models.CharField(choices=[('T', 'TRADING'), ('M', 'MANUFACTURER'), ('X', 'MIXING')], default='M', max_length=20)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tags', models.ManyToManyField(blank=True, to='products.Tag')),
            ],
            options={
                'ordering': ['gprelation', 'cn_name'],
            },
        ),
        migrations.CreateModel(
            name='VendorProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ptype', models.CharField(choices=[('POWDER', 'POWDER'), ('GRANULAR', 'GRANULAR'), ('LIQUID', 'LIQUID')], default='POWDER', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Vendor')),
            ],
            options={
                'ordering': ['vendor', 'product'],
            },
        ),
        migrations.AddField(
            model_name='quotation',
            name='vendorproduct',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.VendorProduct'),
        ),
        migrations.AddField(
            model_name='contact',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Vendor'),
        ),
        migrations.AlterUniqueTogether(
            name='vendorproduct',
            unique_together=set([('vendor', 'product', 'ptype')]),
        ),
    ]
