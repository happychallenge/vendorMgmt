# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-23 14:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0015_auto_20170723_1352'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('en_name', models.CharField(max_length=30, verbose_name='ENGLISH NAME')),
                ('address', models.CharField(max_length=100, verbose_name='ENGLISH ADDRESS')),
                ('tel', models.CharField(max_length=30)),
                ('fax', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PayCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_term', models.CharField(choices=[('CIF', 'CIF'), ('FOB', 'FOB')], default='CIF', max_length=3)),
                ('pay_term', models.CharField(choices=[('CASH', 'CASH'), ('30%PREPAY, 70%LATER', '30%PREPAY, 70%LATER'), ('T/T 30 DAYS', 'T/T 30 DAYS'), ('T/T 45 DAYS', 'T/T 45 DAYS'), ('T/T 60 DAYS', 'T/T 60 DAYS'), ('T/T 90 DAYS', 'T/T 90 DAYS')], default='T/T 60 DAYS', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='POrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_no', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=30)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Contact')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='POrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ptype', models.CharField(choices=[('POWDER', 'POWDER'), ('GRANULAR', 'GRANULAR'), ('LIQUID', 'LIQUID')], default='POWDER', max_length=10)),
                ('amount', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('packing_type', models.CharField(choices=[('CARTON', 'CARTON'), ('BAG', 'BAG'), ('DRUM', 'DRUM'), ('CYLINDER', 'CYLINDER'), ('EXTRA', 'EXTRA')], default='BAG', max_length=10)),
                ('unit_weight', models.IntegerField()),
                ('pallet_weight', models.IntegerField(default=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('porder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.POrder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('quotation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Quotation')),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.IntegerField(choices=[(10, 'SALESCONTRACT'), (20, 'PURCHASECONTRACT'), (30, 'INVOICE_PACKINGLIST'), (40, 'SHIPMENT'), (50, 'EXPORT_DOCUMENT'), (80, 'MOMEYRECEIVED'), (100, 'TAXREFUND')], default=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('porder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.POrder')),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sales_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.SalesOrder')),
                ('sales_order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.POrderItem')),
            ],
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination', models.CharField(choices=[('INCHEON', 'INCHEON'), ('PUSAN', 'PUSAN'), ('GUANGYANG', 'GUANGYANG')], default='PUSAN', max_length=10)),
                ('shipping_date', models.DateField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('porder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.POrder')),
                ('sales_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.SalesOrder')),
            ],
        ),
        migrations.AddField(
            model_name='paycondition',
            name='porder',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='order.POrder'),
        ),
        migrations.AlterUniqueTogether(
            name='salesorderitem',
            unique_together=set([('sales_order', 'sales_order_item')]),
        ),
        migrations.AlterUniqueTogether(
            name='porderitem',
            unique_together=set([('porder', 'product')]),
        ),
    ]
